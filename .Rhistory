y = WWWusage,
type = "b")
plot(x = 1:100,
y = WWWusage,
type = "p")
lines(x = 1:00, y = WWWusage)
lines(x = 1:100, y = WWWusage)
plot(x = 1:100,
y = WWWusage,
type = "b")
plot(x = 1:100,
y = WWWusage,
type = "b",
col = "blu")
plot(x = 1:100,
y = WWWusage,
type = "b",
col = "blue")
plot(x = 1:100,
y = WWWusage,
type = "b",
col = rgb(0,0,1))
plot(x = 1:100,
y = WWWusage,
type = "b",
col = rgb(0,0,1, .5))
plot(x = 1:100,
y = WWWusage,
type = "p",
col = rgb(0,0,1, .5))
lines(x = 1:100, y=WWWusage, col = "blue")
text(x = 80, y = 200, "hi")
text(x = 80, y = 200, "hi", cex = 3)
plot(x = 1:100,
y = WWWusage,
type = "p",
col = rgb(0,0,1, .5))
lines(x = 1:100, y=WWWusage, col = "blue")
text(x = 80, y = 200, "hi", cex = 3)
WWWusage
WWWusage[19]
WWWusage[20]
points(x = 19, y = WWWusage[19], col = "red")
points(x = 18, y = WWWusage[18], col = "red")
plot(x = 1:100,
y = WWWusage,
type = "p",
col = rgb(0,0,1, .5))
lines(x = 1:100, y=WWWusage, col = "blue")
text(x = 80, y = 200, "hi", cex = 3)
points(x = 18, y = WWWusage[18], col = "red")
points(x = 18, y = WWWusage[18], col = "red", pch = 20)
lines(x = 1:100, y=WWWusage, col = "blue", lwd = 2)
set.seed(1985)
LETTERS
spl <- LETTERS[round(rnorm(200, mean = 5, sd = 2))]
set.seed(1985)
spl <- LETTERS[round(rnorm(200, mean = 5, sd = 2))]
set.seed(1985)
spl <- LETTERS[round(rnorm(200, mean = 9, sd = 2))]
spl
table(spl)
table(spl) %>% barplot()
table(spl) %>% sort(decreasing = T)
table(spl) %>% sort(decreasing = T) %>% barplot()
tbl <- table(spl) %>% sort(decreasing = T)
tbl
bp  <- table(spl) %>% sort(decreasing = T) %>% barplot()
bp
bp
text(bp, tbl / 2, tbl)
text(bp, tbl, tbl)
tbl <- table(spl) %>% sort(decreasing = T)
bp  <- table(spl) %>% sort(decreasing = T) %>% barplot()
text(bp, tbl, tbl)
text(bp, tbl*0.9, tbl)
bp  <- table(spl) %>% sort(decreasing = T) %>% barplot()
text(bp, tbl*0.9, tbl)
text(bp, tbl*0.99, tbl)
text(bp, tbl, tbl)
tbl <- table(spl) %>% sort(decreasing = T)
bp  <- table(spl) %>% sort(decreasing = T) %>% barplot()
text(bp, tbl, tbl)
?par
par(mar = c(5, 4, 4, 2) + 0.1)
par(mar = c(5, 4, 5, 2) + 0.1)
bp  <- table(spl) %>% sort(decreasing = T) %>% barplot()
text(bp, tbl, tbl)
par("mai")
par("mai")
mai_cur <- par("mai")
par(mai = c(1.02, 0.82, 2, 0.42))
bp  <- table(spl) %>% sort(decreasing = T) %>% barplot()
text(bp, tbl, tbl)
par(mai = mai_cur)
bp
text(bp, tbl, tbl)
tbl
bp
text(bp, tbl, tbl)
par(mar = c(5, 4, 5, 2) + 0.1)
bp
text(bp, tbl, tbl)
bp
bp  <- table(spl) %>% sort(decreasing = T) %>% barplot()
text(bp, tbl, tbl)
bp  <- table(spl) %>% sort(decreasing = T) %>% barplot(ylim = c(0,36))
text(bp, tbl, tbl)
bp  <- table(spl) %>% sort(decreasing = T) %>% barplot(ylim = c(0,40))
text(bp, tbl, tbl)
text(bp, tbl/2, tbl)
bp  <- table(spl) %>% sort(decreasing = T) %>% barplot()
text(bp, tbl/2, tbl)
title("My beautiful barplot")
title(xlab = "Letter", ylab = "Frequency")
# sample data
set.seed(42)
d <- tibble(x = rnorm(100, mean = 5, sd = 1),
y = rnorm(100, mean = 7, sd = 3))
d
boxplot(d)
boxplot(d, notch = T)
quantile(d$y)
IQR(d$y)
library(beeswarm)
beeswarm(d)
beeswarm(d, pch = 20)
beeswarm(d, pch = 20, col = "darkblue")
?beeswarm
beeswarm(d, pch = 20, col = "darkblue", method = "hex")
beeswarm(d, pch = 20, col = "darkblue", method = "center")
beeswarm(d, pch = 20, col = "darkblue", method = "square")
boxplot(d, add = T, col = rgb(.256, .256, .256, .2))
beeswarm(d, pch = 20, col = "darkblue", method = "hex")
boxplot(d, add = T, col = rgb(.256, .256, .256, .2))
ggplot(cars, aes(x = speed, y = dist))
ggplot(cars, aes(x = speed, y = dist)) + geom_point()
p1 <- ggplot(cars, aes(x = speed, y = dist)) + geom_point()
p1
( p1 <- ggplot(cars, aes(x = speed, y = dist)) + geom_point() )
x <- 1+1
(y <- 1+1 )
p1 + geom_smooth()
p1 + geom_smooth(method = "lm" )
p1 + geom_smooth(method = "lm" ) +
scale_y_continuous(breaks = seq(0,25,7))
p1 + geom_smooth(method = "lm" ) +
scale_x_continuous(breaks = seq(0,25,7))
seq(0,25,7)
p1 + geom_smooth(method = "lm" ) +
scale_x_continuous(trans = "log2")
p1 + geom_smooth(method = "lm" )
(p1 <- p1 + geom_smooth(method = "lm" ))
p1
p1 + scale_color_manual(values = "red")
p1 + geom_point(aes(color = "bla")) + scale_color_manual(values = "red")
( p1 <- ggplot(cars, aes(x = speed, y = dist)) + geom_point(col = "red") )
p1 + theme_minimal()
p1 + theme_bw()
p1 + theme_dark()
p1 + theme_bw()
p1 + theme_bw() + theme(panel.grid.minor = element_blank())
p1 + theme_bw() + theme(panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank())
p1 + theme_bw() + theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank())
p1 + theme_bw() + theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank())
WWWusage
wwwusage <- tibble(time = 1:100, WWWusage = WWWusage)
wwwusage
wwwusage %>% ggplot(aes(x = time, y = WWWusage)) + geom_point()
wwwusage %>% ggplot(aes(x = time, y = WWWusage)) + geom_point() + geom_line()
wwwusage %>% ggplot(aes(x = time, y = WWWusage)) +
geom_point() + geom_line(lwd = 1.5)
wwwusage %>% ggplot(aes(x = time, y = WWWusage)) +
geom_point() + geom_line(lwd = 1.5) + xlab("Time")
wwwusage %>% ggplot(aes(x = time, y = WWWusage)) +
geom_point() + geom_line(lwd = 1.5) + xlab("Time") + ylab("www usage")
wwwusage %>% ggplot(aes(x = time, y = WWWusage)) +
geom_point() + geom_line(lwd = 1.5) + xlab("Time") + ylab("www usage") +
theme(axis.text = element_text(size = 18))
wwwusage %>% ggplot(aes(x = time, y = WWWusage)) +
geom_point() + geom_line(lwd = 1.5) + xlab("Time") + ylab("www usage") +
theme(axis.text = element_text(size = 18),
axis.title = element_text(size = 18))
spl
tibble(x = spl)
tibble(x = spl) %>% ggplot(aes(x = x)) + geom_bar()
?geom_col()
tbl
tbl %>% as_tibble()
tbl %>% as_tibble() %>% ggplot(aes(x = spl, y = n)) + geom_col()
tibble(x = spl) %>% ggplot(aes(x = x)) + geom_bar()
tbl %>% as_tibble() %>% ggplot(aes(x = spl, y = n)) + geom_col()
tbl %>% as_tibble() %>% ggplot(aes(x = spl, y = n)) + geom_col() +
xlab("Letter")
tbl %>% as_tibble() %>% ggplot(aes(x = spl, y = n)) + geom_col() +
xlab("Letter") + ylab("Frequency")
spl
spl01 <- tibble(letters = spl)
spl01
ifelse(spl01$letters %in% LETTERS[1:5], "A-E", "F-K"  )
spl01$group <- ifelse(spl01$letters %in% LETTERS[1:5], "A-E", "F-K")
spl01
spl01 %>%
ggplot(aes(x = group, fill = letters))
spl01 %>%
ggplot(aes(x = group, fill = letters)) +
geom_bar()
spl01 %>%
ggplot(aes(x = letters, fill = group)) +
geom_bar()
spl01 %>%
ggplot(aes(x = letters, fill = group)) +
geom_bar() +
scale_fill_manual(values = c("blue", "green"))
spl01 %>%
ggplot(aes(x = letters, fill = group)) +
geom_bar() +
scale_fill_manual(values = c("blue", "darkgreen"))
spl01 %>%
ggplot(aes(x = letters, fill = group)) +
geom_bar() +
scale_fill_viridis_d()
spl01 %>%
ggplot(aes(x = letters, fill = group)) +
geom_bar() +
scale_fill_viridis_d(begin = 0, end = .8)
spl01 %>%
ggplot(aes(x = letters, fill = group)) +
geom_bar() +
scale_fill_viridis_d(begin = 0, end = ..1)
spl01 %>%
ggplot(aes(x = letters, fill = group)) +
geom_bar() +
scale_fill_viridis_d(begin = 0, end = .1)
spl01 %>%
ggplot(aes(x = letters, fill = group)) +
geom_bar() +
scale_fill_viridis_d(begin = 0, end = .2)
spl01 %>%
ggplot(aes(x = letters, fill = group, col = group)) +
geom_bar() +
scale_fill_viridis_d(begin = 0, end = .2)
spl01 %>%
ggplot(aes(x = letters, fill = group, col = group)) +
geom_bar() +
scale_fill_viridis_d(begin = 0, end = .2) +
scale_color_manual(values = c("yellow", "orange"))
spl01 %>%
ggplot(aes(x = letters, fill = group)) +
geom_bar() +
scale_fill_viridis_d(begin = 0, end = .2)
spl01 %>%
ggplot(aes(x = letters, fill = group)) +
geom_bar() +
scale_fill_viridis_d(begin = 0, end = .2) +
geom_text()
spl01 %>%
ggplot(aes(x = letters, fill = group)) +
geom_bar() +
scale_fill_viridis_d(begin = 0, end = .2) +
geom_text(stat = "count", aes(label = letters))
spl01 %>%
ggplot(aes(x = letters, fill = group)) +
geom_bar() +
scale_fill_viridis_d(begin = 0, end = .2) +
geom_text(stat = "count", aes(label = letters),
position = position_stack(vjust = .5))
spl01 %>%
ggplot(aes(x = letters, fill = group)) +
geom_bar() +
scale_fill_viridis_d(begin = 0, end = .2) +
geom_text(stat = "count", aes(label = letters),
position = position_stack(vjust = .5), col = "white")
spl01 %>%
ggplot(aes(x = letters, fill = group)) +
geom_bar() +
scale_fill_viridis_d(begin = 0, end = 1) +
geom_text(stat = "count", aes(label = letters),
position = position_stack(vjust = .5), col = "white")
spl01 %>%
ggplot(aes(x = letters, fill = group)) +
geom_bar() +
scale_fill_viridis_d(begin = 0, end = 1) +
geom_text(stat = "count", aes(label = letters),
position = position_stack(vjust = .5), col = c(rep("white", 3), rep("black", 8)))
spl01
ifelse(spl01$group=="F-K", "black", "white")
spl01$label_colors <- ifelse(spl01$group=="F-K", "black", "white")
spl01 %>%
ggplot(aes(x = letters, fill = group)) +
geom_bar() +
scale_fill_viridis_d(begin = 0, end = 1) +
geom_text(stat = "count", aes(label = letters),
position = position_stack(vjust = .5), col = c(rep("white", 3), rep("black", 8)))
spl01 %>%
ggplot(aes(x = letters, fill = group)) +
geom_bar() +
scale_fill_viridis_d(begin = 0, end = 1) +
geom_text(stat = "count", aes(label = letters),
position = position_stack(vjust = .5), col = spl01$label_colors))
spl01 %>%
ggplot(aes(x = letters, fill = group)) +
geom_bar() +
scale_fill_viridis_d(begin = 0, end = 1) +
geom_text(stat = "count", aes(label = letters),
position = position_stack(vjust = .5), col = spl01$label_colors)
?dpois
plot(x, ppois(x, 1), type = "s", ylab = "F(x)", main = "Poisson(1) CDF")
plot(1:100, ppois(x, 1), type = "s", ylab = "F(x)", main = "Poisson(1) CDF")
plot(x = 1:100, ppois(x, 1), type = "s", ylab = "F(x)", main = "Poisson(1) CDF")
plot(x = 1:100, ppois(x, 1), type = "s", ylab = "F(x)", main = "Poisson(1) CDF")
plot(x = 1:100, ppois(1:100, 1), type = "s", ylab = "F(x)", main = "Poisson(1) CDF")
plot(x = 1:10, ppois(1:10, 1), type = "s", ylab = "F(x)", main = "Poisson(1) CDF")
dpois(10, 2)
rpois(100, 1)
rpois(100, 5)
79800*0.65
39*0.65
40*0.65
7590-6484.33
setwd("~/sciebo/Projekte/snowclones/osf_quaderns")
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2: sessionInfo
sessionInfo()
# Chunk 3: pkg
# install CRAN packages (if not yet installed)
sapply(c("readxl", "tidyverse", "patchwork", "devtools", "vroom", "DT"), function(x) if(!is.element(x, installed.packages())) install.packages(x, dependencies = T))
# install non-CRAN packages (if not yet installed)
if(!is.element("concordances", installed.packages())) {
devtools::install_github("hartmast/concordances")
}
# if this doesn't work, check sfla.ch for the package
if(!is.element("collostructions", installed.packages())) {
install.packages("https://sfla.ch/wp-content/uploads/2021/02/collostructions_0.2.0.tar.gz", repos = NULL)
}
# load packages
library(readxl)
library(tidyverse)
library(patchwork)
library(vroom)
library(collostructions)
library(DT)
# Chunk 4
# English
en <- read_xlsx("ENCOW_x_is_the_new_y_without_false_hits.xlsx")
# Spanish
es <- read_xlsx("ESCOW_x_nuev_y_without_false_hits.xlsx")
# German
de <- read_xlsx("DECOW_x_ist_das_neue_y_without_false_hits.xlsx")
# Chunk 5
en <- filter(en, keep=="y")
es <- filter(es, keep=="y")
de <- filter(de, keep=="y")
# add lowercase lemmas
es$lemma_x <- tolower(es$Lemma_x)
es$lemma_y <- tolower(es$Lemma_y)
de$lemma_x <- tolower(de$Lemma_x)
de$lemma_y <- tolower(de$Lemma_y)
# add x-y combinations
paste0(es$lemma_x, es$lemma_y)
# add x-y combinations
paste0(es$lemma_x, es$lemma_y, collapse="_")
# add x-y combinations
paste0(es$lemma_x, es$lemma_y, sep="_")
# add x-y combinations
paste0(es$lemma_x, "-", es$lemma_y)
en$lemma_x <- tolower(en$Lemma_x)
en$lemma_y <- tolower(en$Lemma_y)
es$lemma_x_y <- paste0(es$lemma_x, "-", es$lemma_y)
en$lemma_x_y <- paste0(en$lemma_x, "-", en$lemma_y)
de$lemma_x_y <- paste0(de$lemma_x, "-", de$lemma_y)
# table
tibble(languages = c("English", "German", "Spanish"),
types_x = c(length(unique(en$lemma_x)),
length(unique(de$lemma_x)),
length(unique(es$lemma_x))),
types_y = c(length(unique(en$lemma_y)),
length(unique(de$lemma_y)),
length(unique(es$lemma_y))),
types_x_y = c(length(unique(en$lemma_x_y)),
length(unique(de$lemma_x_y)),
length(unique(es$lemma_x_y)))
)
# get hapaxes
es %>% add_count(wt = lemma_x)
# get hapaxes
es %>% group_by(lemma_x) %>% add_count()
# get hapaxes
es %>% group_by(lemma_x) %>% add_count(name = "freq_x")
# get hapaxes
es %>% group_by(lemma_x) %>% add_count(name = "count_x")
# get hapaxes
es %>% group_by(lemma_x) %>%
add_count(name = "count_x") %>%
ungroup %>% group_by(lema_y) %>%
add_count(name = "count_y")
# get hapaxes
es %>% group_by(lemma_x) %>%
add_count(name = "count_x") %>%
ungroup %>% group_by(lemma_y) %>%
add_count(name = "count_y")
# get hapaxes
es %>% group_by(lemma_x) %>%
add_count(name = "count_x") %>%
ungroup %>% group_by(lemma_y) %>%
add_count(name = "count_y") %>%
ungroup %>% group_by(lemma_x_y) %>%
add_count(name = "count_x_y")
# get hapaxes
es <- es %>% group_by(lemma_x) %>%
add_count(name = "count_x") %>%
ungroup %>% group_by(lemma_y) %>%
add_count(name = "count_y") %>%
ungroup %>% group_by(lemma_x_y) %>%
add_count(name = "count_x_y")
es$count_x
# get hapaxes
en <- en %>% group_by(lemma_x) %>%
add_count(name = "count_x") %>%
ungroup %>% group_by(lemma_y) %>%
add_count(name = "count_y") %>%
ungroup %>% group_by(lemma_x_y) %>%
add_count(name = "count_x_y")
de <- de %>% group_by(lemma_x) %>%
add_count(name = "count_x") %>%
ungroup %>% group_by(lemma_y) %>%
add_count(name = "count_y") %>%
ungroup %>% group_by(lemma_x_y) %>%
add_count(name = "count_x_y")
# table
tibble(languages = c("English", "German", "Spanish"),
tokens = c(nrow(en), nrow(de), nrow(es)),
types_x = c(length(unique(en$lemma_x)),
length(unique(de$lemma_x)),
length(unique(es$lemma_x))),
types_y = c(length(unique(en$lemma_y)),
length(unique(de$lemma_y)),
length(unique(es$lemma_y))),
types_x_y = c(length(unique(en$lemma_x_y)),
length(unique(de$lemma_x_y)),
length(unique(es$lemma_x_y))),
hapaxes_x = c(length(which(en$count_x==1)),
length(which(de$count_x==1)),
length(which(es$count_x==1)))
)
# table
tibble(languages = c("English", "German", "Spanish"),
tokens = c(nrow(en), nrow(de), nrow(es)),
types_x = c(length(unique(en$lemma_x)),
length(unique(de$lemma_x)),
length(unique(es$lemma_x))),
types_y = c(length(unique(en$lemma_y)),
length(unique(de$lemma_y)),
length(unique(es$lemma_y))),
types_x_y = c(length(unique(en$lemma_x_y)),
length(unique(de$lemma_x_y)),
length(unique(es$lemma_x_y))),
hapaxes_x = c(length(which(en$count_x==1)),
length(which(de$count_x==1)),
length(which(es$count_x==1))),
hapaxes_y = c(length(which(en$count_y==1)),
length(which(de$count_y==1)),
length(which(es$count_y==1)))
)
# table
tibble(languages = c("English", "German", "Spanish"),
tokens = c(nrow(en), nrow(de), nrow(es)),
types_x = c(length(unique(en$lemma_x)),
length(unique(de$lemma_x)),
length(unique(es$lemma_x))),
types_y = c(length(unique(en$lemma_y)),
length(unique(de$lemma_y)),
length(unique(es$lemma_y))),
types_x_y = c(length(unique(en$lemma_x_y)),
length(unique(de$lemma_x_y)),
length(unique(es$lemma_x_y))),
hapaxes_x = c(length(which(en$count_x==1)),
length(which(de$count_x==1)),
length(which(es$count_x==1))),
hapaxes_y = c(length(which(en$count_y==1)),
length(which(de$count_y==1)),
length(which(es$count_y==1))),
hapaxes_x_y = c(length(which(en$count_x_y==1)),
length(which(de$count_x_y==1)),
length(which(es$count_x_y==1)))
)
# table
tibble(languages = c("English", "German", "Spanish"),
tokens = c(nrow(en), nrow(de), nrow(es)),
types_x = c(length(unique(en$lemma_x)),
length(unique(de$lemma_x)),
length(unique(es$lemma_x))),
types_y = c(length(unique(en$lemma_y)),
length(unique(de$lemma_y)),
length(unique(es$lemma_y))),
types_x_y = c(length(unique(en$lemma_x_y)),
length(unique(de$lemma_x_y)),
length(unique(es$lemma_x_y))),
hapaxes_x = c(length(which(en$count_x==1)),
length(which(de$count_x==1)),
length(which(es$count_x==1))),
hapaxes_y = c(length(which(en$count_y==1)),
length(which(de$count_y==1)),
length(which(es$count_y==1))),
hapaxes_x_y = c(length(which(en$count_x_y==1)),
length(which(de$count_x_y==1)),
length(which(es$count_x_y==1)))
) %>% writexl::write_xlsx("types_tokens_hapaxes.xlsx")
