# English
en <- read_xlsx("ENCOW_x_is_the_new_y_without_false_hits.xlsx")
# load packages
library(readxl)
library(tidyverse)
library(patchwork)
# English
en <- read_xlsx("ENCOW_x_is_the_new_y_without_false_hits.xlsx")
# Spanish
es <- read_xlsx("ESCOW_x_nuev_y_without_false_hits.xlsx")
en$keep
filter(en, keep=="y")
en <- filter(en, keep=="y")
es <- filter(es, keep=="y")
es
library(vroom)
decow <- vroom("/Users/stefanhartmann/Downloads/decow16bx.lp.tsv.gz")
escow <- vroom("/Users/stefanhartmann/sciebo/Projekte/snowclones/ESCOW frequency lists/escow14ax.freq0.l.zip")
escow
encow <- vroom("/Users/stefanhartmann/sciebo/Tutorials/collostructions_tutorial/data/encow16ax.lp.tsv.gz")
decow
decow <- vroom("/Users/stefanhartmann/Downloads/decow16bx.lp.tsv.gz", col_names = c("Lemma", "POS", "Freq"))
escow <- vroom("/Users/stefanhartmann/sciebo/Projekte/snowclones/ESCOW frequency lists/escow14ax.freq0.l.zip", col_names = c("Lemma", "Freq"))
encow <- vroom("/Users/stefanhartmann/sciebo/Tutorials/collostructions_tutorial/data/encow16ax.lp.tsv.gz", col_names = c("Lemma", "POS", "Freq"))
View(es)
es_lemmas <- unique(c(es$Lemma_x, es$Lemma_y))
# which ESCOW lemmas in es_lemmas?
find_lemmas <- which(escow$Lemma %in% es_lemmas)
escow[find_lemmas,]
head(escow, 10) %>% View()
escow <- vroom("/Users/stefanhartmann/sciebo/Projekte/snowclones/ESCOW frequency lists/escow14ax.freq0.l.zip")
colnames(escow)
# which ESCOW lemmas in es_lemmas?
find_lemmas <- which(escow$token... %in% es_lemmas)
escow <- escow[find_lemmas,]
write_csv(escow, "es_cow_lemmas.csv")
escow <- read_csv("es_cow_lemmas.csv")
# ESCOW pos frequencies
es_pos <- read_csv("frequency_lists/ESCOW_pos_frequencies.csv")
View(es_pos)
?filter
head(es_pos)
unique(es_pos$pos)
# get total number of nouns and adjectives
filter(es_pos, pos %in% c("NOUN", "ADP", "PROPN", "ADJ"))
# get total number of nouns and adjectives
filter(es_pos, pos %in% c("NOUN", "ADP", "PROPN", "ADJ")) %>% select(frequency)
# get total number of nouns and adjectives
filter(es_pos, pos %in% c("NOUN", "ADP", "PROPN", "ADJ")) %>% select(frequency) %>% sum
# get total number of nouns and adjectives
n_a_freq <- filter(es_pos, pos %in% c("NOUN", "ADP", "PROPN", "ADJ")) %>% select(frequency) %>% sum
library(collostructions)
# collostructional analysis
es_lemmas
# collostructional analysis
escow$token...
# collostructional analysis
escow$Lemma <- tolower(escow$token...)
# lowercase lemmas
es$lemma_x <- tolower(es$Lemma_x)
es$lemma_y <- tolower(es$Lemma_y)
# create input for coll. anal. for
# x slot
table(es$lemma_x)
# create input for coll. anal. for
# x slot
table(es$lemma_x) %>% as_tibble()
?as_tibble
# create input for coll. anal. for
# x slot
table(es$lemma_x) %>% as_tibble(.name_repair="unique")
# create input for coll. anal. for
# x slot
table(es$lemma_x) %>% as_tibble(.name_repair="unique") %>% setNames(c("Lemma", "Freq_in_cxn"))
# create input for coll. anal. for
# x slot
input_x <- table(es$lemma_x) %>% as_tibble(.name_repair="unique") %>% setNames(c("Lemma", "Freq_in_cxn"))
# lowercase lemma in
escow$Ã¶emma <- tolower(escow$token...)
# lowercase lemma in escow
escow$lemma <- tolower(escow$token...)
select(escow, lemma, f_raw)
left_join(input_x, select(escow, lemma, f_raw),
by = c("Lemma" = "lemma"))
left_join(input_x, select(escow, lemma, f_raw),
by = c("Lemma" = "lemma")) %>% na.omit
left_join(input_x, select(escow, lemma, f_raw),
by = c("Lemma" = "lemma"))
input_x <- left_join(input_x, select(escow, lemma, f_raw),
by = c("Lemma" = "lemma"))
input_x %>% replace_na(list(Freq_in_cxn = 0, f_raw = 0))
# replace NA by 0
input_x <- input_x %>% replace_na(list(Freq_in_cxn = 0, f_raw = 0))
# omit all with f_raw < Freq_in_cxn
which(input_x$f_raw<input_x$Freq_in_cxn)
# omit all with f_raw < Freq_in_cxn
input_x[!which(input_x$f_raw<input_x$Freq_in_cxn),]
# omit all with f_raw < Freq_in_cxn
input_x[which(input_x$f_raw>=input_x$Freq_in_cxn),]
# omit all with f_raw < Freq_in_cxn
input_x <- input_x[which(input_x$f_raw>=input_x$Freq_in_cxn),]
# coll. anal.
collex(input_x, corpsize = n_a_freq)
?collex
input_x
# coll. anal.
collex(as.data.frame(input_x), corpsize = n_a_freq)
# coll. anal.
collex_x <- collex(as.data.frame(input_x), corpsize = n_a_freq)
# create input for coll. anal. for
# x slot
input_y <- table(es$lemma_y) %>% as_tibble(.name_repair="unique") %>% setNames(c("Lemma", "Freq_in_cxn"))
input_y <- left_join(input_y, select(escow, lemma, f_raw),
by = c("Lemma" = "lemma"))
# replace NA by 0
input_y <- input_y %>% replace_na(list(Freq_in_cxn = 0, f_raw = 0))
# omit all with f_raw < Freq_in_cxn
input_y <- input_y[which(input_y$f_raw>=input_y$Freq_in_cxn),]
# coll. anal.
collex_y <- collex(as.data.frame(input_y), corpsize = n_a_freq)
